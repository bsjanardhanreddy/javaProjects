package com.jsp.workqueue.config;

import java.util.Properties;

import javax.sql.DataSource;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import com.zaxxer.hikari.HikariDataSource;

import jakarta.persistence.EntityManagerFactory;

@Configuration
@EnableTransactionManagement
@EnableJpaRepositories(basePackages = "com.jsp.workqueue.repository") // ðŸ’¡ Needed for Spring to find your repository
public class MysqlConfig {

    @Bean
    public DataSource dataSource() {
        String url = System.getenv().getOrDefault("url", "jdbc:mysql://localhost:3306/your_db");
        String user = System.getenv().getOrDefault("userName", "root");
        String pass = System.getenv().getOrDefault("password", "root");

        HikariDataSource dataSource = new HikariDataSource();
        dataSource.setJdbcUrl(url);
        dataSource.setUsername(user);
        dataSource.setPassword(pass);
        dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver");

        return dataSource;
    }

    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactory(DataSource dataSource) {
        LocalContainerEntityManagerFactoryBean em = new LocalContainerEntityManagerFactoryBean();
        em.setDataSource(dataSource);
        em.setPackagesToScan("com.jsp.workqueue.entity"); // ðŸ’¡ where your @Entity classes are

        HibernateJpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();
        em.setJpaVendorAdapter(vendorAdapter);

        Properties props = new Properties();
        props.put("hibernate.hbm2ddl.auto", "update");
        props.put("hibernate.dialect", "org.hibernate.dialect.MySQL8Dialect");
        props.put("hibernate.show_sql", "true");

        em.setJpaProperties(props);

        return em;
    }

    @Bean
    public PlatformTransactionManager transactionManager(EntityManagerFactory emf) {
        return new JpaTransactionManager(emf);
    }
}





//package com.jsp.workqueue.config;
//
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
//import org.springframework.transaction.annotation.EnableTransactionManagement;
//
//import com.zaxxer.hikari.HikariConfig;
//import com.zaxxer.hikari.HikariDataSource;
//
//@Configuration
//@EnableTransactionManagement
//@EnableJpaRepositories(basePackages = "com.jsp.workqueue.repository")
//public class MysqlConfig 
//{
//	@Bean
//	public HikariConfig getDataSource() 
//	{
//		/*
//		 * HikariConfig hikariConfig =new HikariConfig ();
//		 * hikariConfig.setJdbcUrl(null); 
//		 * hikariConfig.setUsername("root");
//		 * hikariConfig.setPassword("root");
//		 * hikariConfig.setDriverClassName("com.mysql.cj.jdbc.Driver");
//		 * return new HikariDataSource(hikariConfig);
//		 
//		 		(or)
//		 */
//        // Fallbacks for local development/testing
//        String url = System.getenv().getOrDefault("url", "jdbc:mysql://localhost:3306/your_db");
//        String user = System.getenv().getOrDefault("userName", "root");
//        String pass = System.getenv().getOrDefault("password", "root");
//        HikariDataSource dataSource = new HikariDataSource();
//        dataSource.setJdbcUrl(url);
//        dataSource.setUsername(user);
//        dataSource.setPassword(pass);
//        dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver"); //  Add driver explicitly;
//		
//		return dataSource;
//	}
//
//}
