cd path/to/javaResources      # Go into your local project directory
git init                                  âœ… Initialize Git repo
git add .                       Add all files
git commit -m "Initial commit"
git push -u origin main       # Push to GitHub
git branch -M main            # Rename branch to main (if needed)
git remote add origin https://github.com/bsjanardhanreddy/javaResources.git

The commands you've listed are correct and represent the standard sequence to initialize a Git repository and push it to GitHub for the first time. Here's a step-by-step explanation of what each command does:
________________________________________
âœ… Step-by-step Explanation
echo "# javaResources" >> README.md
â€¢	Creates a README.md file and adds the title # javaResources to it.
git init
â€¢	Initializes a new Git repository in the current directory.
git add README.md
â€¢	Stages the README.md file for commit.
git commit -m "first commit"
â€¢	Commits the staged file with the message "first commit".
git branch -M main
â€¢	Renames the current branch (likely master) to main.
git remote add origin https://github.com/bsjanardhanreddy/javaResources.git
â€¢	Adds a remote repository with the name origin pointing to your GitHub repo.
git push -u origin main
â€¢	Pushes the main branch to the origin remote and sets main as the upstream branch.
________________________________________
âœ… Final Output on Success:
If successful, youâ€™ll see something like:
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/bsjanardhanreddy/javaResources.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.
________________________________________
ðŸ§© Optional Tips:
If youâ€™re doing this for an existing project:
git add .
git commit -m "initial commit"
To include all files.
Let me know if you want to push an existing project folder or clone and work with a GitHub repo.


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Here are Git remote-related commands in a clear and structured way:
________________________________________
âœ… 1. Add a Remote Repository
git remote add origin https://github.com/username/repo-name.git
â€¢	Adds a remote called origin pointing to the given GitHub repo.
â€¢	origin is the default name for the remote.
________________________________________
âœ… 2. View All Remotes
git remote -v
â€¢	Lists all remotes with their URLs.
â€¢	Helpful to verify the remote URL.
________________________________________
âœ… 3. Change Remote URL
git remote set-url origin https://github.com/username/new-repo.git
â€¢	Updates the URL for the existing remote (origin).
________________________________________
âœ… 4. Remove a Remote
git remote remove origin
â€¢	Removes the remote named origin.
________________________________________
âœ… 5. Rename a Remote
git remote rename old-name new-name
â€¢	Renames a remote from old-name to new-name.
________________________________________
âœ… 6. Fetch from Remote
git fetch origin
â€¢	Gets the latest changes from the remote without merging.
________________________________________
âœ… 7. Pull from Remote
git pull origin main
â€¢	Gets changes from the remote and merges into your current branch.
________________________________________
âœ… 8. Push to Remote
git push origin main
â€¢	Pushes your local main branch to the remote origin.
________________________________________
âœ… 9. Show More Info About Remote
git remote show origin
â€¢	Displays detailed information about the remote.
________________________________________

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Here are Git branch-related commands explained with what they do and how to use them:
________________________________________
ðŸŒ¿ Git Branch Commands: What & How
________________________________________
âœ… 1. View All Branches
git branch
â€¢	Shows local branches only.
â€¢	The current branch is marked with a *.
git branch -a
â€¢	Shows local and remote branches.
________________________________________
âœ… 2. Create a New Branch
git branch feature-login
â€¢	Creates a new branch called feature-login, but does NOT switch to it.
________________________________________
âœ… 3. Create & Switch to New Branch (Shortcut)
git checkout -b feature-login
or (Recommended for newer Git versions)
git switch -c feature-login
â€¢	Creates and immediately switches to the new branch.
________________________________________
âœ… 4. Switch to an Existing Branch
git checkout main
or
git switch main
â€¢	Changes your working directory to the main branch.
________________________________________
âœ… 5. Rename Current Branch
git branch -m new-branch-name
â€¢	Renames the current branch.
git branch -m old-name new-name
â€¢	Renames a specific branch.
________________________________________
âœ… 6. Delete a Local Branch
git branch -d branch-name
â€¢	Deletes a branch safely (only if it's fully merged).
git branch -D branch-name
â€¢	Force deletes a branch (even if not merged).
________________________________________
âœ… 7. Delete a Remote Branch
git push origin --delete branch-name
â€¢	Removes the branch from the remote (origin).
________________________________________
âœ… 8. Push a New Local Branch to Remote
git push -u origin feature-login
â€¢	Pushes the branch and sets it to track the remote branch.
________________________________________
âœ… 9. Merge a Branch into Current Branch
git merge feature-login
â€¢	Merges feature-login into your current branch (e.g., main).
________________________________________
âœ… 10. List Branches Merged Into Current
git branch --merged
________________________________________
âœ… 11. List Branches NOT Merged
git branch --no-merged
________________________________________
âœ… 12. Check Which Branch Youâ€™re On
git status
â€¢	Shows the current branch and staged/unstaged changes.
________________________________________




